* Emacs Manual 
** Initial Startup Buffer
   You can also force Emacs to display a file or directory at startup
   by setting the variable ‘initial-buffer-choice’ to a string naming
   that file or directory.  The value of ‘initial-buffer-choice’ may
   also be a function (of no arguments) that should return a buffer
   which is then displayed.  If ‘initial-buffer-choice’ is non-‘nil’,
   then if you specify any files on the command line, Emacs still
   visits them, but does not display them initially.
** Emacs Keybindings
   ‘C-f’
        Move forward one character (‘forward-char’).
   
   ‘<RIGHT>’
        This command (‘right-char’) behaves like ‘C-f’, except when point
        is in a right-to-left paragraph (*note Bidirectional Editing::).
   
   ‘C-b’
        Move backward one character (‘backward-char’).
   
   ‘<LEFT>’
        This command (‘left-char’) behaves like ‘C-b’, except if the
        current paragraph is right-to-left (*note Bidirectional Editing::).
   
   ‘C-n’
   ‘<DOWN>’
        Move down one screen line (‘next-line’).  This command attempts to
        keep the horizontal position unchanged, so if you start in the
        middle of one line, you move to the middle of the next.
   
   ‘C-p’
   ‘<UP>’
        Move up one screen line (‘previous-line’).  This command preserves
        position within the line, like ‘C-n’.
   
   ‘C-a’
   ‘<Home>’
        Move to the beginning of the line (‘move-beginning-of-line’).
   
   ‘C-e’
   ‘<End>’
        Move to the end of the line (‘move-end-of-line’).
   
   ‘M-f’
        Move forward one word (‘forward-word’).  *Note Words::.
   
   ‘C-<RIGHT>’
   ‘M-<RIGHT>’
        This command (‘right-word’) behaves like ‘M-f’, except it moves
        _backward_ by one word if the current paragraph is right-to-left.
        *Note Bidirectional Editing::.
   
   ‘M-b’
        Move backward one word (‘backward-word’).  *Note Words::.
   
   ‘C-<LEFT>’
   ‘M-<LEFT>’
        This command (‘left-word’) behaves like ‘M-b’, except it moves
        _forward_ by one word if the current paragraph is right-to-left.
        *Note Bidirectional Editing::.
   
   ‘M-r’
        Without moving the text on the screen, reposition point on the left
        margin of the center-most text line of the window; on subsequent
        consecutive invocations, move point to the left margin of the
        top-most line, the bottom-most line, and so forth, in cyclic order
        (‘move-to-window-line-top-bottom’).
   
        A numeric argument says which screen line to place point on,
        counting downward from the top of the window (zero means the top
        line).  A negative argument counts lines up from the bottom (−1
        means the bottom line).  *Note Arguments::, for more information on
        numeric arguments.
   
   ‘M-<’
        Move to the top of the buffer (‘beginning-of-buffer’).  With
        numeric argument N, move to N/10 of the way from the top.  On
        graphical displays, ‘C-<HOME>’ does the same.
   
   ‘M->’
        Move to the end of the buffer (‘end-of-buffer’).  On graphical
        displays, ‘C-<END>’ does the same.
   
   ‘C-v’
   ‘<PageDown>’
   ‘<next>’
        Scroll the display one screen forward, and move point onscreen if
        necessary (‘scroll-up-command’).  *Note Scrolling::.
   
   ‘M-v’
   ‘<PageUp>’
   ‘<prior>’
        Scroll one screen backward, and move point onscreen if necessary
        (‘scroll-down-command’).  *Note Scrolling::.
   
   ‘M-g c’
        Read a number N and move point to buffer position N.  Position 1 is
        the beginning of the buffer.
   
   ‘M-g M-g’
   ‘M-g g’
        Read a number N and move point to the beginning of line number N
        (‘goto-line’).  Line 1 is the beginning of the buffer.  If point is
        on or just after a number in the buffer, that is the default for N.
        Just type <RET> in the minibuffer to use it.  You can also specify
        N by giving ‘M-g M-g’ a numeric prefix argument.  *Note Select
        Buffer::, for the behavior of ‘M-g M-g’ when you give it a plain
        prefix argument.
   
   ‘M-g <TAB>’
        Read a number N and move to column N in the current line.  Column 0
        is the leftmost column.  If called with a prefix argument, move to
        the column number specified by the argument’s numeric value.
   
   ‘C-x C-n’
        Use the current column of point as the “semipermanent goal column”
        for ‘C-n’ and ‘C-p’ (‘set-goal-column’) in the current buffer.
        When a semipermanent goal column is in effect, those commands
        always try to move to this column, or as close as possible to it,
        after moving vertically.  The goal column remains in effect until
        canceled.
   
   ‘C-u C-x C-n’
        Cancel the goal column.  Henceforth, ‘C-n’ and ‘C-p’ try to
        preserve the horizontal position, as usual.
